#############################################################################
# Makefile for building: qt.app/Contents/MacOS/qt
# Generated by qmake (2.01a) (Qt 4.8.2) on: Sun Jun 10 00:25:08 2012
# Project:  qt.pro
# Template: app
# Command: /Developer/qt/bin/qmake -o Makefile qt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = clang++
CFLAGS        = -Wall -g
CXXFLAGS      = -Wall -g
INCPATH       = 
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS) 
AR            = ar cq
RANLIB        = ranlib -s
TAR           = tar -zcf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		expression.cpp \
		type.cpp \
		block.cpp \
		operators.cpp \
		managers.cpp
OBJECTS       = main.o \
		expression.o \
		type.o \
		block.o \
		operators.o \
		managers.o
HEADERS       = expression.h \
		type.h \
		block.h \
		operators.h \
		managers.h \
		mode.h \
		LPy.h \
		error.h
DIST          = 
DESTDIR       = 
TARGET        = LPy

####### Custom Compiler Variables

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS) $(TARGET)


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: 
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_clean:
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

#expression.o: expression.cpp
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o expression.o expression.cpp

#block.o: block.cpp
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o block.o block.cpp

#managers.o: managers.cpp
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o managers.o managers.cpp

#type.o: type.cpp
#	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o type.o type.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

tar:
	$(TAR) $(TARGET).tar.gz $(SOURCES) $(HEADERS) Makefile manual.pdf example
